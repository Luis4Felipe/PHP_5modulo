<?php

// autoload_real.php @generated by Composer

class ComposerAutoloaderInit94e8f62ba9495cb121ecaa1423fe8eb8
{
    private static $loader;

    // Esta função é responsável por carregar a classe de carregador de autoload do Composer.
    public static function loadClassLoader($class)
    {

        if ('Composer\Autoload\ClassLoader' === $class) 
        {
            require __DIR__ . '/ClassLoader.php';
        }

    }

    /**
     * @return \Composer\Autoload\ClassLoader
     */
    // Esta função retorna o carregador de autoload do Composer.
    public static function getLoader()
    {

        if (null !== self::$loader) 
        {
            return self::$loader;
        }


        // Registra a função 'loadClassLoader' como um autoload para a classe 'Composer\Autoload\ClassLoader'.
        spl_autoload_register(array('ComposerAutoloaderInit94e8f62ba9495cb121ecaa1423fe8eb8', 'loadClassLoader'), true, true);
        // Cria uma nova instância do carregador de autoload do Composer.
        self::$loader = $loader = new \Composer\Autoload\ClassLoader(\dirname(__DIR__));
        // Remove a função 'loadClassLoader' do registro de autoload.
        spl_autoload_unregister(array('ComposerAutoloaderInit94e8f62ba9495cb121ecaa1423fe8eb8', 'loadClassLoader'));


        // Carrega o arquivo 'autoload_static.php'.
        require __DIR__ . '/autoload_static.php';
        // Inicializa as classes estáticas definidas no arquivo 'autoload_static.php'.
        call_user_func(\Composer\Autoload\ComposerStaticInit94e8f62ba9495cb121ecaa1423fe8eb8::getInitializer($loader));


        // Registra todas as classes gerenciadas pelo carregador de autoload.
        $loader->register(true);


        return $loader;

    }
    
}

